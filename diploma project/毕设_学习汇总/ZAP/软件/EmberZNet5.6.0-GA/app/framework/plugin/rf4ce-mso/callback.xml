<?xml version="1.0"?>
<callback prefix="emberAf" postfix="Callback">
  <include>EMBER_AF_API_RF4CE_PROFILE</include>
  <include>EMBER_AF_API_RF4CE_MSO</include>
  <function id="START_VALIDATION" name="Start Validation" returnType="void">
    <description>
      This function is called by the RF4CE MSO plugin when a temporary pairing has been successfully created and the application should begin the validation procedure.  The application must complete the validation within the validation wait time (if set) and also kick the watchdog within the initial watchdog timeout (if set) to avoid the validation automatically failing due to a timeout.
    </description>
    <arg name="pairingIndex" type="int8u" description="The index of the pairing entry." />
    <codeForStub />
  </function>
  <function id="BINDING_COMPLETE" name="Binding Complete" returnType="void">
    <description>
      This function is called by the RF4CE MSO plugin when the binding operation completes.  If status is ::EMBER_SUCCESS, binding was successful and pairingIndex indicates the index in the pairing table for the remote node.
    </description>
    <arg name="status"       type="EmberAfRf4ceMsoBindingStatus" description="The status of the binding operation." />
    <arg name="pairingIndex" type="int8u"                        description="The index of the pairing entry." />
    <codeForStub />
  </function>
  <function id="USER_CONTROL" name="User Control" returnType="void">
    <description>
      This function is called by the RF4CE MSO plugin when a user control starts or stops.  If the type of the record is ::EMBER_AF_RF4CE_MSO_COMMAND_USER_CONTROL_PRESSED, the application should execute the requested operation repeatedly at some application-specific rate.  When the repetition should stop, the plugin will call the callback again with the type set to ::EMBER_AF_RF4CE_MSO_COMMAND_USER_CONTROL_RELEASED.  ::EMBER_AF_RF4CE_MSO_COMMAND_USER_CONTROL_REPEATED is a special case of ::EMBER_AF_RF4CE_MSO_COMMAND_USER_CONTROL_PRESSED and means that the pressed command from the originator was not received and that the originator is still triggering the action.  The application should process a repeat type the same as a pressed type, but may wish to perform additional operations to compensate for missed commands.
    </description>
    <arg name="record" type="const EmberAfRf4ceMsoUserControlRecord *" description="The user control record." />
    <codeForStub />
  </function>
  <function id="GET_IR_RF_DATABASE_ATTRIBUTE" name="Get Ir Rf Database Attribute" returnType="EmberAfRf4ceStatus">
    <description>
      This function is called by the RF4CE MSO plugin when a target is queried by a controller for one of the IR_RF_DATABASE attributes. The application is responsible for storing these attributes. If the application currently stores an entry for the corresponding passed pairing index and entry index, it should copy the content of such attribute at the passed 'value' pointer and return ::EMBER_AF_RF4CE_STATUS_SUCCESS, otherwise it should return an ::EmberAfRf4ceStatus indicating the reason of failure.  valueLength is a pointer to an integer that indicates the length of the buffer pointed to by value.  The application must not write more than *valueLength bytes to value.  If the application returns ::EMBER_AF_RF4CE_STATUS_SUCCESS, it must also update *valueLength to indicate the number of bytes actually written to value.
    </description>
    <arg name="pairingIndex" type="int8u"   description="The pairing index of the requested attribute." />
    <arg name="entryIndex"   type="int8u"   description="The entry index of the requested attribute." />
    <arg name="valueLength"  type="int8u *" description="A pointer to the size of the buffer pointed to by value that must be updated with the length written to value." />
    <arg name="value"        type="int8u *" description="A pointer where the application should copy the content of the requested attribute." />
    <codeForStub>
      return EMBER_AF_RF4CE_STATUS_UNSUPPORTED_ATTRIBUTE;
    </codeForStub>
  </function>
  <function id="HAVE_IR_RF_DATABASE_ATTRIBUTE" name="Have Ir Rf Database Attribute" returnType="boolean">
    <description>
      This function is called by the RF4CE MSO plugin when a target is queried by a controller for one of the IR_RF_DATABASE attributes. The application is responsible for storing these attributes. If the application currently stores an entry for the corresponding passed pairing index and entry index, it should return TRUE, otherwise it should return FALSE.
    </description>
    <arg name="pairingIndex" type="int8u" description="The pairing index of the requested attribute." />
    <arg name="entryIndex"   type="int8u" description="The entry index of the requested attribute." />
    <codeForStub>
      return FALSE;
    </codeForStub>
  </function>
    <function id="INCOMING_IR_RF_DATABASE_ATTRIBUTE" name="Incoming Ir Rf Database Attribute" returnType="void">
    <description>
      This function is called by the RF4CE MSO plugin when controller receives a get attribute response for one of the IR_RF_DATABASE attributes. The application is responsible for storing these attributes.
    </description>
    <arg name="pairingIndex" type="int8u"         description="The pairing index of the requested attribute." />
    <arg name="entryIndex"   type="int8u"         description="The entry index of the requested attribute." />
    <arg name="valueLength"  type="int8u"         description="The length of the requested attribute." />
    <arg name="value"        type="const int8u *" description="A pointer to the content of the requested attribute." />
    <codeForStub>
    </codeForStub>
  </function>
  <function id="GET_IR_RF_DATABASE_ENTRY" name="Get Ir Rf Database Entry" returnType="EmberStatus">
    <description>
      This function is called by the RF4CE MSO plugin to retrieve the IR-RF database entry for a key code when the controller is sending user control commands.  The application should return ::EMBER_SUCCESS and populate the entry if the IR-RF database entry is available for the RC command code.  Otherwise, the application should return an error code.
    </description>
    <arg name="keyCode" type="EmberAfRf4ceMsoKeyCode"             description="The RC command code of the user control." />
    <arg name="entry"   type="EmberAfRf4ceMsoIrRfDatabaseEntry *" description="A pointer to the ::EmberAfRf4ceMsoIrRfDatabaseEntry to be populated." />
    <codeForStub>
      return EMBER_LIBRARY_NOT_PRESENT;
    </codeForStub>
  </function>
</callback>
